/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Implementaciones.VisitaImplementacion;
import Modelos.Visita;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author edwin-993
 */
public class InterfazVisita extends javax.swing.JFrame {

    /**
     * Creates new form InterfazVisita
     */
    public InterfazVisita() {
        initComponents();
        this.setLocationRelativeTo(null);
        listarRegistros();
        actualizarCombos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbdFunciones = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jdcIngreso = new com.toedter.calendar.JDateChooser();
        btnBorrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiagnostico = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        cmbPaciente = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jdcSalida = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnInsertar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jdcIngreso1 = new com.toedter.calendar.JDateChooser();
        btnBorrar1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDiagnostico1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        cmbPaciente1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jdcSalida1 = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        txtId1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jdcIngreso2 = new com.toedter.calendar.JDateChooser();
        btnBorrar2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDiagnostico2 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        cmbPaciente2 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jdcSalida2 = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        txtId2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblRegistros = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        cmbFiltro = new javax.swing.JComboBox<>();
        txtCriterio = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cmbOrden = new javax.swing.JComboBox<>();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Visita");
        setResizable(false);

        tbdFunciones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        tbdFunciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbdFuncionesMouseClicked(evt);
            }
        });

        jdcIngreso.setFocusable(false);
        jdcIngreso.setMaximumSize(new java.awt.Dimension(200, 24));
        jdcIngreso.setMinimumSize(new java.awt.Dimension(200, 24));
        jdcIngreso.setPreferredSize(new java.awt.Dimension(200, 24));

        btnBorrar.setText("Borrar y cancelar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        jScrollPane1.setMaximumSize(new java.awt.Dimension(200, 24));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(200, 24));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 24));

        txtDiagnostico.setColumns(20);
        txtDiagnostico.setRows(5);
        jScrollPane1.setViewportView(txtDiagnostico);

        jLabel2.setText("Fecha de ingreso:");

        cmbPaciente.setMaximumSize(new java.awt.Dimension(200, 24));
        cmbPaciente.setMinimumSize(new java.awt.Dimension(200, 24));
        cmbPaciente.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel5.setText("Diagn√≥stico:");

        jLabel4.setText("Fecha de salida:");

        jdcSalida.setFocusable(false);
        jdcSalida.setMaximumSize(new java.awt.Dimension(200, 24));
        jdcSalida.setMinimumSize(new java.awt.Dimension(200, 24));
        jdcSalida.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel1.setText("Identificador");

        txtId.setText("Recuperar ultimo id");
        txtId.setEnabled(false);
        txtId.setMaximumSize(new java.awt.Dimension(200, 24));
        txtId.setMinimumSize(new java.awt.Dimension(200, 24));
        txtId.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel3.setText("Paciente:");

        btnInsertar.setText("Registrar visita");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnInsertar)
                        .addGap(54, 54, 54)
                        .addComponent(btnBorrar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbPaciente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jdcIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jdcSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbPaciente, jScrollPane1, jdcIngreso, jdcSalida, txtId});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jdcIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBorrar)
                    .addComponent(btnInsertar))
                .addContainerGap())
        );

        tbdFunciones.addTab("Insertar", jPanel1);

        jdcIngreso1.setMaximumSize(new java.awt.Dimension(200, 24));
        jdcIngreso1.setMinimumSize(new java.awt.Dimension(200, 24));
        jdcIngreso1.setPreferredSize(new java.awt.Dimension(200, 24));

        btnBorrar1.setText("Borrar y cancelar");
        btnBorrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrar1ActionPerformed(evt);
            }
        });

        jScrollPane2.setMaximumSize(new java.awt.Dimension(200, 24));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(200, 24));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(200, 24));

        txtDiagnostico1.setColumns(20);
        txtDiagnostico1.setRows(5);
        txtDiagnostico1.setMaximumSize(new java.awt.Dimension(400, 24));
        txtDiagnostico1.setMinimumSize(new java.awt.Dimension(200, 24));
        txtDiagnostico1.setPreferredSize(new java.awt.Dimension(200, 24));
        jScrollPane2.setViewportView(txtDiagnostico1);

        jLabel6.setText("Fecha de ingreso:");

        cmbPaciente1.setMaximumSize(new java.awt.Dimension(200, 24));
        cmbPaciente1.setMinimumSize(new java.awt.Dimension(200, 24));
        cmbPaciente1.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel7.setText("Diagn√≥stico:");

        jLabel8.setText("Fecha de salida:");

        jdcSalida1.setMaximumSize(new java.awt.Dimension(200, 24));
        jdcSalida1.setMinimumSize(new java.awt.Dimension(200, 24));
        jdcSalida1.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel9.setText("Identificador");

        txtId1.setText("Seleccionar en la tabla");
        txtId1.setEnabled(false);
        txtId1.setMaximumSize(new java.awt.Dimension(200, 24));
        txtId1.setMinimumSize(new java.awt.Dimension(200, 24));
        txtId1.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel10.setText("Paciente:");

        btnGuardar.setText("Guardar cambios");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGuardar)
                .addGap(38, 38, 38)
                .addComponent(btnBorrar1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jdcSalida1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbPaciente1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jdcIngreso1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtId1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cmbPaciente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcIngreso1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcSalida1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBorrar1)
                    .addComponent(btnGuardar))
                .addContainerGap())
        );

        tbdFunciones.addTab("Editar", jPanel2);

        jdcIngreso2.setMaximumSize(new java.awt.Dimension(200, 24));
        jdcIngreso2.setMinimumSize(new java.awt.Dimension(200, 24));
        jdcIngreso2.setPreferredSize(new java.awt.Dimension(200, 24));

        btnBorrar2.setText("Borrar y cancelar");
        btnBorrar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrar2ActionPerformed(evt);
            }
        });

        jScrollPane3.setMaximumSize(new java.awt.Dimension(200, 24));
        jScrollPane3.setMinimumSize(new java.awt.Dimension(200, 24));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(200, 24));

        txtDiagnostico2.setColumns(20);
        txtDiagnostico2.setRows(5);
        jScrollPane3.setViewportView(txtDiagnostico2);

        jLabel11.setText("Fecha de ingreso:");

        cmbPaciente2.setMaximumSize(new java.awt.Dimension(200, 24));
        cmbPaciente2.setMinimumSize(new java.awt.Dimension(200, 24));
        cmbPaciente2.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel12.setText("Diagn√≥stico:");

        jLabel13.setText("Fecha de salida:");

        jdcSalida2.setMaximumSize(new java.awt.Dimension(200, 24));
        jdcSalida2.setMinimumSize(new java.awt.Dimension(200, 24));
        jdcSalida2.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel14.setText("Identificador");

        txtId2.setText("Seleccionar en la tabla");
        txtId2.setEnabled(false);
        txtId2.setMaximumSize(new java.awt.Dimension(200, 24));
        txtId2.setMinimumSize(new java.awt.Dimension(200, 24));
        txtId2.setPreferredSize(new java.awt.Dimension(200, 24));

        jLabel15.setText("Paciente:");

        btnEliminar.setText("Eliminar visita");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcSalida2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbPaciente2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcIngreso2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBorrar2)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPaciente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jdcIngreso2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jdcSalida2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar)
                    .addComponent(btnBorrar2))
                .addContainerGap())
        );

        tbdFunciones.addTab("Eliminar", jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tblRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRegistrosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblRegistros);

        jLabel16.setText("Filtrar por:");

        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Identificador", "Fecha_Ingreso", "Fecha_Salida", "Diagnostico", "Nombre_Paciente" }));
        cmbFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFiltroActionPerformed(evt);
            }
        });

        txtCriterio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCriterioKeyReleased(evt);
            }
        });

        jLabel17.setText("En orden:");

        cmbOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascendente", "Descendente" }));
        cmbOrden.setSelectedIndex(1);
        cmbOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrdenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(6, 6, 6)
                        .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel17)
                        .addGap(6, 6, 6)
                        .addComponent(cmbOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnRegresar.setText("Regresar al men√∫ principal");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tbdFunciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tbdFunciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRegresar))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void listarRegistros() {
        MetodosVisita visita = new VisitaImplementacion();
        ArrayList<String> pacientes;
        try {
            tblRegistros.setModel(visita.recuperarVisitas(
                    cmbFiltro.getSelectedIndex(),
                    txtCriterio.getText(),
                    cmbOrden.getSelectedIndex()));
            txtId.setText(visita.recuperarUltimo() + "");
            pacientes = visita.recuperarNombresPacientes();
            for (int i = 0; i < pacientes.size(); i++) {
                cmbPaciente.addItem(pacientes.get(i));
                cmbPaciente1.addItem(pacientes.get(i));
                cmbPaciente2.addItem(pacientes.get(i));
            }
        } catch (Exception err) {
            JOptionPane.showMessageDialog(rootPane,
                    "Se ha producido un error en listarRegistros\n"
                    + err.getMessage(), "Error en InterfazVisita", JOptionPane.ERROR_MESSAGE);
        }

    }

    private boolean validarDatos() {
        try {
            java.time.Instant Ingreso = jdcIngreso.getDate().toInstant();
            java.time.Instant Salida = jdcSalida.getDate().toInstant();
            if (Salida.isBefore(Ingreso)) {
                JOptionPane.showMessageDialog(rootPane, "La fecha de salida es antes de la de ingreso\n"
                        + "Favor de verificar nuevamente");
                return false;
            } else if (txtDiagnostico.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "No se ha ingresado un diagn√≥stico al paciente \n",
                         "Error en validarDatos", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (NullPointerException err) {
            JOptionPane.showMessageDialog(rootPane, "Se ha ingresado una fecha invalida. \n"
                    + err.getMessage(), "Error en validarDatos", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;

    }
    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        // TODO add your handling code here:
        if (validarDatos()) {
            MetodosVisita metodos = new VisitaImplementacion();
            try {
                Visita visita = new Visita(Integer.valueOf(txtId.getText()),
                        jdcIngreso.getDate(),
                        jdcSalida.getDate(),
                        txtDiagnostico.getText(),
                        metodos.obtenerId(cmbPaciente.getSelectedItem().toString()),
                        (String) cmbPaciente.getSelectedItem());
                int afectadas = metodos.registrarVisita(visita);
                if (afectadas == -1) {
                    JOptionPane.showMessageDialog(rootPane,
                            "Se ha producido un error en btnInsertar",
                            "Error en InterfazVisita",
                            JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "Se ha insertado con √©xito un registro",
                            "Registro exitoso", JOptionPane.INFORMATION_MESSAGE);
                }

                listarRegistros();

            } catch (NumberFormatException err) {

            } catch (Exception ex) {
                Logger.getLogger(InterfazVisita.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnInsertarActionPerformed

    private void cmbFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFiltroActionPerformed
        // TODO add your handling code here:
        listarRegistros();
    }//GEN-LAST:event_cmbFiltroActionPerformed

    private void txtCriterioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCriterioKeyReleased
        // TODO add your handling code here:
        listarRegistros();
    }//GEN-LAST:event_txtCriterioKeyReleased

    private void cmbOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrdenActionPerformed
        // TODO add your handling code here:
        listarRegistros();
    }//GEN-LAST:event_cmbOrdenActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(rootPane, "Est√° seguro de querer eliminar la visita?\n"
                + "Esta accion no se puede deshacer", "ELIMINACION DEFINITIVA", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            MetodosVisita metodos = new VisitaImplementacion();
            try {
                JOptionPane.showMessageDialog(rootPane, "Se ha eliminado " + metodos.eliminarVisita(Integer.parseInt(txtId2.getText())));
                listarRegistros();
                limpiarEliminar();
                limpiarInsertar();
            } catch (NumberFormatException err) {
                JOptionPane.showMessageDialog(rootPane,
                        "Se ha producido un error en btnEliminar\n" + err.getMessage(),
                        "Error en InterfazVisita",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    public void limpiarInsertar() {
        cmbPaciente.setSelectedIndex(-1);
        txtDiagnostico.setText("");
        jdcIngreso.cleanup();
        jdcSalida.cleanup();
    }

    public void insertar(boolean activacion) {
        cmbPaciente.setEnabled(activacion);
        txtDiagnostico.setEnabled(activacion);
        jdcIngreso.setEnabled(activacion);
        jdcSalida.setEnabled(activacion);
        btnInsertar.setEnabled(activacion);
        btnBorrar.setEnabled(activacion);

    }

    public void editar(boolean activacion) {
        btnRegresar.setEnabled(!activacion);
        cmbPaciente1.setEnabled(activacion);
        txtDiagnostico1.setEnabled(activacion);
        jdcIngreso1.setEnabled(activacion);
        jdcSalida1.setEnabled(activacion);
        btnGuardar.setEnabled(activacion);
        btnBorrar1.setEnabled(activacion);
    }

    public void eliminar(boolean activacion) {
        btnEliminar.setEnabled(activacion);
        btnBorrar2.setEnabled(activacion);
        btnRegresar.setEnabled(!activacion);
    }

    public void limpiarEditar() {
        cmbPaciente1.setSelectedIndex(-1);
        txtDiagnostico1.setText("");
        jdcIngreso1.cleanup();
        jdcSalida1.cleanup();
        tblRegistros.clearSelection();
        tbdFunciones.setSelectedIndex(0);
        btnRegresar.setEnabled(true);
        insertar(true);

    }

    public void limpiarEliminar() {
        cmbPaciente2.setSelectedIndex(-1);
        txtDiagnostico2.setText("");
        jdcIngreso2.cleanup();
        jdcSalida2.cleanup();
        tblRegistros.clearSelection();
        tbdFunciones.setSelectedIndex(0);
        btnRegresar.setEnabled(true);
        insertar(true);
    }
    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(rootPane, """
                                                   Al cambiar de funcion se perderan los cambios de la funcion actual
                                                   Esta usted seguro de querer proceder?""", "Confirmaci√≥n de eliminacion",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            limpiarInsertar();
            tblRegistros.clearSelection();
            tbdFunciones.setSelectedIndex(0);
        }

    }//GEN-LAST:event_btnBorrarActionPerformed

    private void tbdFuncionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbdFuncionesMouseClicked
        // TODO add your handling code here:
        int tabSeleccionada = tbdFunciones.getSelectedIndex();
        boolean tablaSeleccionada = tblRegistros.getSelectedRow() == -1 ? false : true;
        if (JOptionPane.showConfirmDialog(rootPane, """
                                                   Al cambiar de funcion se perderan los cambios de la funcion actual
                                                   Esta usted seguro de querer proceder?""", "Confirmaci√≥n de eliminacion",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if ((tabSeleccionada == 1 || tabSeleccionada == 2) && tablaSeleccionada) {

                switch (tabSeleccionada) {
                    case 1:
                        insertar(false);
                        editar(true);
                        eliminar(false);
                        break;
                    case 2:
                        insertar(false);
                        editar(false);
                        eliminar(true);
                        break;
                }
            } else {
                insertar(true);
                editar(false);
                eliminar(false);
                tblRegistros.clearSelection();
                tbdFunciones.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_tbdFuncionesMouseClicked

    private void tblRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRegistrosMouseClicked
        // TODO add your handling code here:
        int fila = tblRegistros.getSelectedRow();
        tbdFunciones.setSelectedIndex(1);
        txtId1.setText(tblRegistros.getValueAt(fila, 0).toString());

        jdcIngreso1.setDate((java.util.Date) tblRegistros.getValueAt(fila, 1));
        jdcSalida1.setDate((java.util.Date) tblRegistros.getValueAt(fila, 2));
        txtDiagnostico1.setText((String) tblRegistros.getValueAt(fila, 3));
        cmbPaciente1.setSelectedItem((Object) tblRegistros.getValueAt(fila, 4));

        txtId2.setText(tblRegistros.getValueAt(fila, 0).toString());
        jdcIngreso2.setDate((java.util.Date) tblRegistros.getValueAt(fila, 1));
        jdcSalida2.setDate((java.util.Date) tblRegistros.getValueAt(fila, 2));
        txtDiagnostico2.setText((String) tblRegistros.getValueAt(fila, 3));
        cmbPaciente2.setSelectedItem((Object) tblRegistros.getValueAt(fila, 4));
        insertar(false);
        editar(true);
        eliminar(false);
    }//GEN-LAST:event_tblRegistrosMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        MetodosVisita metodos = new VisitaImplementacion();
        int afectadas;
        try {
            Visita visita = new Visita(Integer.parseInt(txtId1.getText()),
                    jdcIngreso1.getDate(),
                    jdcSalida1.getDate(),
                    txtDiagnostico1.getText(),
                    metodos.obtenerId(cmbPaciente.getSelectedItem().toString()),
                    cmbPaciente.getSelectedItem().toString());
            System.out.print(visita.toString());
            afectadas = metodos.actualizarVisita(visita);
            if (afectadas == -1 || afectadas == 0) {
                JOptionPane.showMessageDialog(rootPane,
                        "Se ha producido un error",
                        "Error en btnInsertar",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(rootPane,
                        "Se ha insertado con √©xito un registro",
                        "Registro exitoso", JOptionPane.INFORMATION_MESSAGE);
                limpiarEditar();
                limpiarEliminar();
                listarRegistros();

            }
        } catch (NullPointerException err) {
            JOptionPane.showMessageDialog(rootPane,
                    "Se ha producido un error\n" + err.getMessage(),
                    "Error en btnInsertar",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBorrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrar1ActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(rootPane, """
                                                   Al cambiar de funcion se perderan los cambios de la funcion actual
                                                   Esta usted seguro de querer proceder?""", "Confirmaci√≥n de eliminacion",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            limpiarEditar();
            tblRegistros.clearSelection();
            tbdFunciones.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnBorrar1ActionPerformed

    private void btnBorrar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrar2ActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane, """
                                                   Al cambiar de funcion se perderan los cambios de la funcion actual
                                                   Esta usted seguro de querer proceder?""", "Confirmaci√≥n de eliminacion",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            limpiarEliminar();
            tblRegistros.clearSelection();
            tbdFunciones.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnBorrar2ActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        try{
           Home inicio = new Home();
            inicio.setVisible(true);
            // Cerrar la ventana
            dispose();  
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ocurri√≥ un error",
                    "Error",0);

        }
    }//GEN-LAST:event_btnRegresarActionPerformed
    public void actualizarCombos() {
        cmbPaciente.removeAllItems();
        MetodosVisita metodos = new VisitaImplementacion();
        ArrayList<String> NombresPaciente = metodos.recuperarNombresPacientes();

        for (String nombre : NombresPaciente) {
            cmbPaciente.addItem(nombre);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazVisita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazVisita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazVisita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazVisita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazVisita().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBorrar1;
    private javax.swing.JButton btnBorrar2;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cmbFiltro;
    private javax.swing.JComboBox<String> cmbOrden;
    private javax.swing.JComboBox<String> cmbPaciente;
    private javax.swing.JComboBox<String> cmbPaciente1;
    private javax.swing.JComboBox<String> cmbPaciente2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private com.toedter.calendar.JDateChooser jdcIngreso;
    private com.toedter.calendar.JDateChooser jdcIngreso1;
    private com.toedter.calendar.JDateChooser jdcIngreso2;
    private com.toedter.calendar.JDateChooser jdcSalida;
    private com.toedter.calendar.JDateChooser jdcSalida1;
    private com.toedter.calendar.JDateChooser jdcSalida2;
    private javax.swing.JTabbedPane tbdFunciones;
    private javax.swing.JTable tblRegistros;
    private javax.swing.JTextField txtCriterio;
    private javax.swing.JTextArea txtDiagnostico;
    private javax.swing.JTextArea txtDiagnostico1;
    private javax.swing.JTextArea txtDiagnostico2;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtId1;
    private javax.swing.JTextField txtId2;
    // End of variables declaration//GEN-END:variables
}
