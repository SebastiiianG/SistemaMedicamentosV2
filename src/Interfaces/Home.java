package Interfaces;


import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
//import com.formdev.flatlaf.FlatIntelliJLaf;
//import com.formdev.flatlaf.FlatLaf;


/**
 *
 * @author ulseg
 */
public class Home extends javax.swing.JFrame {

    public Home() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    
    
    public void activarHome(boolean activado){
        pnlPresentacionDatos.setEnabled(activado);
        
    }
    
    public void limpiar(){
        grupoRDBHome.clearSelection();
        cmbIndependientes.setSelectedIndex(-1);
        cmbDependientes.setSelectedIndex(-1);
    }
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        grupoRDBHome = new javax.swing.ButtonGroup();
        pnlPresentacionDatos = new javax.swing.JPanel();
        rdbIndependientes = new javax.swing.JRadioButton();
        rdbDependientes = new javax.swing.JRadioButton();
        cmbIndependientes = new javax.swing.JComboBox<>();
        cmbDependientes = new javax.swing.JComboBox<>();
        btnNavega = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlPresentacionDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Interfaces Medicamentos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        pnlPresentacionDatos.setToolTipText("");
        pnlPresentacionDatos.setEnabled(false);

        grupoRDBHome.add(rdbIndependientes);
        rdbIndependientes.setText("Interfaces independientes");
        rdbIndependientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdbIndependientesMouseClicked(evt);
            }
        });

        grupoRDBHome.add(rdbDependientes);
        rdbDependientes.setText("Interfaces dependientes");
        rdbDependientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdbDependientesMouseClicked(evt);
            }
        });
        rdbDependientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbDependientesActionPerformed(evt);
            }
        });

        cmbIndependientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enfermera", "Medicamento", "Médico", "Paciente", "Presentación", "Principio Activo" }));
        cmbIndependientes.setSelectedIndex(-1);

        cmbDependientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administración", "Composición", "Contenido receta", "Medicamento final", "Receta", "Visita" }));
        cmbDependientes.setSelectedIndex(-1);

        btnNavega.setText("Ir a la interfaz");
        btnNavega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNavegaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPresentacionDatosLayout = new javax.swing.GroupLayout(pnlPresentacionDatos);
        pnlPresentacionDatos.setLayout(pnlPresentacionDatosLayout);
        pnlPresentacionDatosLayout.setHorizontalGroup(
            pnlPresentacionDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPresentacionDatosLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(pnlPresentacionDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbIndependientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rdbIndependientes, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(pnlPresentacionDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rdbDependientes, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addComponent(cmbDependientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(54, 54, 54))
            .addGroup(pnlPresentacionDatosLayout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(btnNavega)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPresentacionDatosLayout.setVerticalGroup(
            pnlPresentacionDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPresentacionDatosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlPresentacionDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbIndependientes)
                    .addComponent(rdbDependientes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPresentacionDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbIndependientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDependientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnNavega)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Zilla Slab", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Medicamentos");

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(pnlPresentacionDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(btnLimpiar)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(pnlPresentacionDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pnlPresentacionDatos.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
       
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cmbIndependientes.setEnabled(false); //Desactiva la combo box independiente al iniciar
        cmbDependientes.setEnabled(false); //Desactiva la cmb dependiente
    }//GEN-LAST:event_formWindowOpened

    private void rdbDependientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbDependientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbDependientesActionPerformed

    private void rdbIndependientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbIndependientesMouseClicked
        cmbIndependientes.setEnabled(true); //Activa la combo box independiente
        cmbDependientes.setEnabled(false); //Desactiva la cmb dependiente
        cmbDependientes.setSelectedIndex(-1);
        cmbIndependientes.setSelectedIndex(0);
    }//GEN-LAST:event_rdbIndependientesMouseClicked

    private void rdbDependientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbDependientesMouseClicked
        cmbIndependientes.setEnabled(false); //Desactiva la cmb independiente
        cmbDependientes.setEnabled(true);//Activa la cmb dependiente
        cmbIndependientes.setSelectedIndex(-1);
        cmbDependientes.setSelectedIndex(0);
    }//GEN-LAST:event_rdbDependientesMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnNavegaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNavegaActionPerformed
        
        int comboIndependiente = cmbIndependientes.getSelectedIndex();
        int comboDependiente = cmbDependientes.getSelectedIndex();
        
        //System.out.println(comboIndependiente);
        //System.out.println(comboDependiente);
        try{
            if (comboIndependiente != -1) {
                // El combo de Independientes está seleccionado
                switch (comboIndependiente) {
                    case 0:
                        // Abre la interfaz Enfermera
                        InterfazEnfermera enfermera = new InterfazEnfermera();
                        enfermera.setVisible(true);
                        break;
                    case 1:
                        // Abre la interfaz Medicamento
                        InterfazMedicamento medicamento = new InterfazMedicamento();
                        medicamento.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    case 2:
                        // Abre la interfaz Médico
                        InterfazMedico medico = new InterfazMedico();
                        medico.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    case 3:
                        // Abre la interfaz Paciente
                        InterfazPaciente paciente = new InterfazPaciente();
                        paciente.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    case 4:
                        // Abre la interfaz Presentación
                        InterfazPresentacion presentacion = new InterfazPresentacion();
                        presentacion.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    case 5:
                        // Abre la interfaz Principio activo
                        InterfazPrincipio principio = new InterfazPrincipio();
                        principio.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, 
                                "No se seleccionó ninguna opción válida","Error",0);
                        limpiar();
                        break;            
                }
            }else if (comboDependiente != -1) {
                // El combo de Dependientes está seleccionado
                switch (comboDependiente) {
                    case 0:
                        // Abre la interfaz Administracion
                        InterfazAdministracion administracion = new InterfazAdministracion();
                        administracion.setVisible(true);
                        break;
                    case 1:
                        // Abre la interfaz Composicion
                        InterfazComposicion composicion = new InterfazComposicion();
                        composicion.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    case 2:
                        // Abre la interfaz Contenido Receta
                        InterfazContReceta contReceta = new InterfazContReceta();
                        contReceta.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    case 3:
                        // Abre la interfaz Medicamento final
                        InterfazMedFinal medFinal = new InterfazMedFinal();
                        medFinal.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    case 4:
                        // Abre la interfaz Receta
                        InterfazReceta receta = new InterfazReceta();
                        receta.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    case 5:
                        // Abre la interfaz Visita
                        InterfazVisita visita = new InterfazVisita();
                        visita.setVisible(true);
                        // Cerrar la ventana Home
                        dispose(); 
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, 
                                "No se seleccionó ninguna opción válida","Error",0);
                        limpiar();
                        break;
                }
            }else {
                JOptionPane.showMessageDialog(null, "No se seleccionó ninguna opción","Error",0);
            }
        }catch(Exception e){
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);

            JOptionPane.showMessageDialog(null, "Ocurrió un error","Error",0);
        }

    }//GEN-LAST:event_btnNavegaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //FlatLaf.registerCustomDefaultsSource("propiedades");
        //FlatIntelliJLaf.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnNavega;
    private javax.swing.JComboBox<String> cmbDependientes;
    private javax.swing.JComboBox<String> cmbIndependientes;
    private javax.swing.ButtonGroup grupoRDBHome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlPresentacionDatos;
    private javax.swing.JRadioButton rdbDependientes;
    private javax.swing.JRadioButton rdbIndependientes;
    // End of variables declaration//GEN-END:variables
}
