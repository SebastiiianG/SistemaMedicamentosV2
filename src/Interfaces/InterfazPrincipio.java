package Interfaces;

import Implementaciones.PrincipioImplementacion;
import java.awt.Color;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
//import com.formdev.flatlaf.FlatIntelliJLaf;
//import com.formdev.flatlaf.FlatLaf;
import Modelos.PrincipioActivo;


/**
 *
 * @author ulseg
 */
public class InterfazPrincipio extends javax.swing.JFrame {

    public InterfazPrincipio() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    public void mensajeAdvertencia(String mensaje, String titulo){
        JOptionPane.showMessageDialog(null,mensaje,titulo,0);
    }
    public void mensajeInformativo(String mensaje, String titulo){
        JOptionPane.showInternalMessageDialog(null, mensaje, titulo, JOptionPane.INFORMATION_MESSAGE);
    }
    
    public void activarPrincipio(boolean activado){
        pnlPrincipioDatos.setEnabled(activado);
        txtNamePrincipio.setEnabled(activado);
        lblNombrePrincipio.setEnabled(activado);
        txtDescripcionPrincipio.setEnabled(activado);
        lblDescripcionPrincipio.setEnabled(activado);
        btnLimpiarPrincipio.setEnabled(activado);
        btnRegistroPrincipio.setEnabled(activado);
        btnBusquedaPrincipio.setEnabled(!activado);
    }
    
    public void limpiarPrincipio(){
        ///Se limpia el campo de texto
        txtNamePrincipio.setText("");
        txtDescripcionPrincipio.setText("");
    }
    
    public void listarRegistrosPrincipio(){ ///Funcion para actualizar la lista acorde a los criterios seleccionados al momento
        MetodosPrincipio metodosPrincipio = new PrincipioImplementacion();
        try {
            tblPrincipio.setModel(metodosPrincipio.recuperarRegistrosPrincipio
            (cmbOrdenPrincipio.getSelectedIndex(),txtBuscaPrincipio.getText()));
            
        } catch (Exception ex) {
            Logger.getLogger(InterfazPrincipio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public boolean validarDatos(){
        // Validación del nombre del principio activo
        if (txtNamePrincipio.getText().equals("") || 
                txtNamePrincipio.getText().equals("Nombre del principio activo") || 
                txtNamePrincipio.getText().equals("Ingrese el nombre del principio activo")) {
            mensajeAdvertencia("El nombre del principio activo es inválido.\n"
                    + "Favor de verificar que:\n"
                    + "-> No contenga acentos\n"
                    + "-> No contenga caracteres especiales\n"
                    + "-> Haya registrado correctamente el nombre del principio activo\n", "Nombre inválido");
            return false;
        }

        // Validación de la descripción del principio activo
        if (txtDescripcionPrincipio.getText().equals("") || 
                txtDescripcionPrincipio.getText().equals("Descripción del principio activo") || 
                txtDescripcionPrincipio.getText().equals("Ingrese la descripción del principio activo")) {
            mensajeAdvertencia("La descripción del principio activo es inválida.\n"
                    + "Favor de verificar que:\n"
                    + "-> No esté vacía\n"
                    + "-> Haya registrado correctamente la descripción del principio activo\n", "Descripción inválida");
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        lblPrincipio = new javax.swing.JLabel();
        btnBusquedaPrincipio = new javax.swing.JButton();
        txtBuscaPrincipio = new javax.swing.JTextField();
        btnNewPrincipio = new javax.swing.JButton();
        pnlPrincipioDatos = new javax.swing.JPanel();
        lblNombrePrincipio = new javax.swing.JLabel();
        txtNamePrincipio = new javax.swing.JTextField();
        btnRegistroPrincipio = new javax.swing.JButton();
        btnEliminarPrincipio = new javax.swing.JButton();
        btnActualizarPrincipio = new javax.swing.JButton();
        btnLimpiarPrincipio = new javax.swing.JButton();
        lblDescripcionPrincipio = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcionPrincipio = new javax.swing.JTextArea();
        pnlFiltradoPrincipio = new javax.swing.JPanel();
        lblFiltroPrincipio = new javax.swing.JLabel();
        cmbOrdenPrincipio = new javax.swing.JComboBox<>();
        pnlRegistrosPrincipio = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrincipio = new javax.swing.JTable();
        btnDeseleccion = new javax.swing.JButton();
        btnInicio = new javax.swing.JButton();

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblPrincipio.setText("Principio:");

        btnBusquedaPrincipio.setText("Buscar principio activo");

        txtBuscaPrincipio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscaPrincipioKeyPressed(evt);
            }
        });

        btnNewPrincipio.setText("Nuevo Principio");
        btnNewPrincipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPrincipioActionPerformed(evt);
            }
        });

        pnlPrincipioDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos del principio activo"));
        pnlPrincipioDatos.setToolTipText("");
        pnlPrincipioDatos.setEnabled(false);

        lblNombrePrincipio.setText("Principio activo:");
        lblNombrePrincipio.setEnabled(false);

        txtNamePrincipio.setText("Nombre del principio activo");
        txtNamePrincipio.setEnabled(false);
        txtNamePrincipio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNamePrincipioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNamePrincipioFocusLost(evt);
            }
        });

        btnRegistroPrincipio.setText("Registrar principio");
        btnRegistroPrincipio.setEnabled(false);
        btnRegistroPrincipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistroPrincipioActionPerformed(evt);
            }
        });

        btnEliminarPrincipio.setText("Eliminar principio");
        btnEliminarPrincipio.setEnabled(false);
        btnEliminarPrincipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPrincipioActionPerformed(evt);
            }
        });

        btnActualizarPrincipio.setText("Actualizar principio ");
        btnActualizarPrincipio.setEnabled(false);
        btnActualizarPrincipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarPrincipioActionPerformed(evt);
            }
        });

        btnLimpiarPrincipio.setText("Limpiar campos");
        btnLimpiarPrincipio.setEnabled(false);
        btnLimpiarPrincipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarPrincipioActionPerformed(evt);
            }
        });

        lblDescripcionPrincipio.setText("Descripción:");
        lblDescripcionPrincipio.setEnabled(false);

        txtDescripcionPrincipio.setColumns(20);
        txtDescripcionPrincipio.setLineWrap(true);
        txtDescripcionPrincipio.setRows(5);
        txtDescripcionPrincipio.setText("Descripción del principio activo");
        txtDescripcionPrincipio.setToolTipText("");
        txtDescripcionPrincipio.setEnabled(false);
        txtDescripcionPrincipio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescripcionPrincipioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescripcionPrincipioFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(txtDescripcionPrincipio);

        pnlFiltradoPrincipio.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Filtrar tabla mediante"));

        lblFiltroPrincipio.setText("Orden de despliegue");

        cmbOrdenPrincipio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascendente", "Descendente" }));
        cmbOrdenPrincipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrdenPrincipioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFiltradoPrincipioLayout = new javax.swing.GroupLayout(pnlFiltradoPrincipio);
        pnlFiltradoPrincipio.setLayout(pnlFiltradoPrincipioLayout);
        pnlFiltradoPrincipioLayout.setHorizontalGroup(
            pnlFiltradoPrincipioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltradoPrincipioLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlFiltradoPrincipioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFiltroPrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbOrdenPrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFiltradoPrincipioLayout.setVerticalGroup(
            pnlFiltradoPrincipioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltradoPrincipioLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblFiltroPrincipio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbOrdenPrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlPrincipioDatosLayout = new javax.swing.GroupLayout(pnlPrincipioDatos);
        pnlPrincipioDatos.setLayout(pnlPrincipioDatosLayout);
        pnlPrincipioDatosLayout.setHorizontalGroup(
            pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipioDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrincipioDatosLayout.createSequentialGroup()
                        .addComponent(btnLimpiarPrincipio)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlPrincipioDatosLayout.createSequentialGroup()
                        .addGroup(pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombrePrincipio)
                            .addComponent(lblDescripcionPrincipio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNamePrincipio)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnRegistroPrincipio, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                        .addComponent(btnEliminarPrincipio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnActualizarPrincipio))
                .addGap(51, 51, 51)
                .addComponent(pnlFiltradoPrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        pnlPrincipioDatosLayout.setVerticalGroup(
            pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipioDatosLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlFiltradoPrincipio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlPrincipioDatosLayout.createSequentialGroup()
                        .addGroup(pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombrePrincipio)
                            .addComponent(txtNamePrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegistroPrincipio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPrincipioDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPrincipioDatosLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnEliminarPrincipio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnActualizarPrincipio))
                            .addComponent(lblDescripcionPrincipio)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiarPrincipio)))
                .addContainerGap())
        );

        pnlRegistrosPrincipio.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Registros existentes:"));

        tblPrincipio.setAutoCreateRowSorter(true);
        tblPrincipio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Principio Activo", "Descripción"
            }
        ));
        tblPrincipio.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblPrincipio.setAutoscrolls(false);
        tblPrincipio.setShowGrid(false);
        tblPrincipio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblPrincipioFocusGained(evt);
            }
        });
        tblPrincipio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPrincipioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPrincipio);

        javax.swing.GroupLayout pnlRegistrosPrincipioLayout = new javax.swing.GroupLayout(pnlRegistrosPrincipio);
        pnlRegistrosPrincipio.setLayout(pnlRegistrosPrincipioLayout);
        pnlRegistrosPrincipioLayout.setHorizontalGroup(
            pnlRegistrosPrincipioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrosPrincipioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        pnlRegistrosPrincipioLayout.setVerticalGroup(
            pnlRegistrosPrincipioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrosPrincipioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDeseleccion.setText("Deseleccionar registro");
        btnDeseleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeseleccionActionPerformed(evt);
            }
        });

        btnInicio.setText("Regresar al menú principal");
        btnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeseleccion)
                        .addGap(18, 18, 18)
                        .addComponent(btnNewPrincipio))
                    .addComponent(pnlRegistrosPrincipio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblPrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscaPrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnBusquedaPrincipio))
                    .addComponent(pnlPrincipioDatos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrincipio)
                    .addComponent(txtBuscaPrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBusquedaPrincipio))
                .addGap(18, 18, 18)
                .addComponent(pnlPrincipioDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRegistrosPrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewPrincipio)
                    .addComponent(btnDeseleccion)
                    .addComponent(btnInicio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlPrincipioDatos.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamePrincipioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamePrincipioFocusGained
        if(txtNamePrincipio.getText().equals("Nombre del principio activo") || 
                txtNamePrincipio.getText().equals("Ingrese el nombre del principio activo")){
            txtNamePrincipio.setText("");
        }
    }//GEN-LAST:event_txtNamePrincipioFocusGained

    private void txtNamePrincipioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamePrincipioFocusLost
        if(txtNamePrincipio.getText().equals("")){
            txtNamePrincipio.setText("Ingrese el nombre del principio activo");
            txtNamePrincipio.setForeground(Color.gray);
        }else{
            txtNamePrincipio.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtNamePrincipioFocusLost

    private void btnRegistroPrincipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistroPrincipioActionPerformed
        if(validarDatos()){//SI LOS DATOS REGISTRADOS SON VALIDOS
                //INICIALIZA UN OBJETO PRESENTACION CON LOS DATOS DE LAS TEXTBOXES
            PrincipioActivo principio = new PrincipioActivo();
            principio.setPriNombre(txtNamePrincipio.getText());
            principio.setPriDescripcion(txtDescripcionPrincipio.getText());
            ///Intenta convertir el grupo en numerico para guardarlo en la base de datos
            try {
                    MetodosPrincipio metodosPrincipio = new PrincipioImplementacion();
                    metodosPrincipio.registrarPrincipio(principio);
                    listarRegistrosPrincipio(); ///Se llama la funcion para actualizar la lista de principio activo
            }catch(Exception r) {
            JOptionPane.showMessageDialog(null,"Error al guardar en la base de datos", "Error al guardar: "+r.getMessage(),0);
            }
            mensajeInformativo("Registro realizado con éxito", "Registro exitoso");
        }else{
            mensajeAdvertencia("Registro no realizado","Error de captura de datos");
        }
        limpiarPrincipio();
        activarPrincipio(false);
    }//GEN-LAST:event_btnRegistroPrincipioActionPerformed
        
    private void btnLimpiarPrincipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarPrincipioActionPerformed
        limpiarPrincipio();//Llama a la función limpiar
    }//GEN-LAST:event_btnLimpiarPrincipioActionPerformed

    private void cmbOrdenPrincipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrdenPrincipioActionPerformed
       listarRegistrosPrincipio();
    }//GEN-LAST:event_cmbOrdenPrincipioActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       listarRegistrosPrincipio();
       btnBusquedaPrincipio.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void btnEliminarPrincipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPrincipioActionPerformed
        MetodosPrincipio metodosPrincipio = new PrincipioImplementacion();
        int afectadas = -1;
        if(JOptionPane.showConfirmDialog(null, "¿Está seguro que desea eliminar el registro?\n"
                + "Esta acción será irreversible\n"
                + "Verifique que el registro a eliminar es el deseado", 
                "Advertencia de eliminación de datos",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            try {
                afectadas = metodosPrincipio.eliminarPrincipio(metodosPrincipio.recuperarIdPrincipio(txtNamePrincipio.getText()));
                listarRegistrosPrincipio();
                limpiarPrincipio();
                activarPrincipio(false);
                btnEliminarPrincipio.setEnabled(false);
                btnActualizarPrincipio.setEnabled(false);
                btnLimpiarPrincipio.setEnabled(false);
                btnNewPrincipio.setEnabled(true);
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null,
                        "El registro que intenta borrar está siendo utilizado en otra interfaz.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            if(afectadas== -1){
                mensajeAdvertencia("El registro no se ha eliminado debido a un"
                        + " error"  ,"Error de eliminación");
            }else{
                mensajeInformativo("Registro eliminado\n"
                + "Filas afectadas con la eliminacion: " + afectadas,"El registro se ha eliminado");
            }
        }    
    }//GEN-LAST:event_btnEliminarPrincipioActionPerformed

    private void btnActualizarPrincipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarPrincipioActionPerformed
        PrincipioActivo principio = new PrincipioActivo();
        MetodosPrincipio metodosPrincipio = new PrincipioImplementacion();
        int afectadas=-1;
        if(JOptionPane.showConfirmDialog(null, "¿Está seguro que desea modificar el registro?\n"
                + "Verifique que el registro a modificar es el deseado", 
                "Advertencia de modificación de datos",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){         
            
            try{
               principio.setPriNombre(txtNamePrincipio.getText());
               principio.setPriDescripcion(txtDescripcionPrincipio.getText());
               System.out.println(txtNamePrincipio.getText());
               System.out.println(txtDescripcionPrincipio.getText());
               int id = metodosPrincipio.recuperarIdPrincipio((String)(tblPrincipio.getValueAt(tblPrincipio.getSelectedRow(), 0)));  
               //System.out.println("El id es: " + id);   Es una bandera
               principio.setIdPrincipio(id);
               afectadas = metodosPrincipio.modificarPrincipio(principio); 
               //System.out.println("Las afectadas fueron: " + afectadas); 

                //Actualiza la lista de la interfaz
                listarRegistrosPrincipio();
                ///Limpia los campos de informacion
                limpiarPrincipio();
                ///Desactiva los campos y regresa al estado inicial de la interfaz
                activarPrincipio(false);
            
                btnEliminarPrincipio.setEnabled(false);
                btnActualizarPrincipio.setEnabled(false);
                btnLimpiarPrincipio.setEnabled(false);
                btnNewPrincipio.setEnabled(true); 
            }catch(Exception ex){
                Logger.getLogger(InterfazPrincipio.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }  
    }//GEN-LAST:event_btnActualizarPrincipioActionPerformed

    private void btnDeseleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeseleccionActionPerformed
        btnNewPrincipio.setEnabled(true);
        tblPrincipio.clearSelection();
    }//GEN-LAST:event_btnDeseleccionActionPerformed

    private void txtBuscaPrincipioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaPrincipioKeyPressed
        listarRegistrosPrincipio();
    }//GEN-LAST:event_txtBuscaPrincipioKeyPressed

    private void btnNewPrincipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPrincipioActionPerformed
        btnRegistroPrincipio.setEnabled(true);
        txtNamePrincipio.setEnabled(true);
        txtDescripcionPrincipio.setEnabled(true);
        limpiarPrincipio();
    }//GEN-LAST:event_btnNewPrincipioActionPerformed

    private void tblPrincipioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblPrincipioFocusGained
        tblPrincipio.enableInputMethods(false);
    }//GEN-LAST:event_tblPrincipioFocusGained

    private void txtDescripcionPrincipioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripcionPrincipioFocusGained
        if(txtDescripcionPrincipio.getText().equals("Descripción del principio activo") ||
            txtDescripcionPrincipio.getText().equals("Ingrese la descripción del principio activo")){
            txtDescripcionPrincipio.setText("");
        }
    }//GEN-LAST:event_txtDescripcionPrincipioFocusGained

    private void txtDescripcionPrincipioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescripcionPrincipioFocusLost
        if(txtDescripcionPrincipio.getText().equals("")){
            txtDescripcionPrincipio.setText("Ingrese la descripción del principio activo");
            txtDescripcionPrincipio.setForeground(Color.gray);
        }else{
            txtDescripcionPrincipio.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtDescripcionPrincipioFocusLost

    private void tblPrincipioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPrincipioMouseClicked
        if(!tblPrincipio.isEnabled()){

        }else{
            ///Para poder seleccionar algun alumno de la lista y modificarlo o eliminarlo
            int fila = tblPrincipio.getSelectedRow();
            activarPrincipio(true);
            //Se activan solo los botones para actualizar y eliminar
            btnRegistroPrincipio.setEnabled(false);
            btnActualizarPrincipio.setEnabled(true);
            btnEliminarPrincipio.setEnabled(true);
            btnLimpiarPrincipio.setEnabled(false);
            btnNewPrincipio.setEnabled(false);

            //Se recupera la informacion hacia los campos de texto de informacion

            txtNamePrincipio.setText(tblPrincipio.getValueAt(fila,0).toString());
            txtDescripcionPrincipio.setText(tblPrincipio.getValueAt(fila,1).toString());
        }
    }//GEN-LAST:event_tblPrincipioMouseClicked

    private void btnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioActionPerformed
        try{
            Home inicio = new Home();
            inicio.setVisible(true);
            // Cerrar la ventana
            dispose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ocurrió un error",
                "Error",0);

        }
    }//GEN-LAST:event_btnInicioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //FlatLaf.registerCustomDefaultsSource("propiedades");
        //FlatIntelliJLaf.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazPrincipio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarPrincipio;
    private javax.swing.JButton btnBusquedaPrincipio;
    private javax.swing.JButton btnDeseleccion;
    private javax.swing.JButton btnEliminarPrincipio;
    private javax.swing.JButton btnInicio;
    private javax.swing.JButton btnLimpiarPrincipio;
    private javax.swing.JButton btnNewPrincipio;
    private javax.swing.JButton btnRegistroPrincipio;
    private javax.swing.JComboBox<String> cmbOrdenPrincipio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblDescripcionPrincipio;
    private javax.swing.JLabel lblFiltroPrincipio;
    private javax.swing.JLabel lblNombrePrincipio;
    private javax.swing.JLabel lblPrincipio;
    private javax.swing.JPanel pnlFiltradoPrincipio;
    private javax.swing.JPanel pnlPrincipioDatos;
    private javax.swing.JPanel pnlRegistrosPrincipio;
    private javax.swing.JTable tblPrincipio;
    private javax.swing.JTextField txtBuscaPrincipio;
    private javax.swing.JTextArea txtDescripcionPrincipio;
    private javax.swing.JTextField txtNamePrincipio;
    // End of variables declaration//GEN-END:variables
}
